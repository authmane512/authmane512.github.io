{"version":3,"sources":["GlobalList.js","SearchSpecies.js","SpecificList.js","AddIndividual.js","data.js","App.js","serviceWorker.js","index.js"],"names":["globalListColumns","Header","accessor","GlobalList","_this","this","react_default","a","createElement","es","className","data","props","columns","defaultPageSize","minRows","getTdProps","state","rowInfo","column","instance","onClick","e","handleOriginal","new_type","index","type","onTypeClick","Component","SearchSpecies","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","search","results","handleChange","bind","assertThisInitialized","getResult","handleClick","setState","target","value","_this2","preventDefault","$","ajax","url","method","dataType","q","success","filter","specy","hasOwnProperty","canonicalName","includes","map","id","key","name","console","log","addType","_this3","placeholder","onChange","specificListColumns","Cell","concat","SpecificList","confirmAlert","title","message","buttons","label","removeIndividual","clicked","AddIndividual","addingShowed","age","handleInputChange","add","defineProperty","s","addIndividual","selectedType","disabled","onSubmit","htmlFor","iniGlobalList","diet","cry","feature","iniSpecificList","App","globalList","specificList","toConsumableArray","x","new_data","globalListData","objectSpread","amount","y","length","src_GlobalList","src_SearchSpecies","src_SpecificList","src_AddIndividual","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2SAIMA,SAAoB,CACxB,CACEC,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,SACRC,SAAU,YAkCCC,mLA7BJ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,aACVC,KAAMN,KAAKO,MAAMD,KACjBE,QAASb,EACTc,gBAAiB,GACjBC,QAAS,EACTC,WAAY,SAACC,EAAOC,EAASC,EAAQC,GAAzB,MAAuC,CAC/CC,QAAS,SAACC,EAAGC,GACX,IAAIC,EAAWpB,EAAKQ,MAAMD,KAAKO,EAAQO,OAAOC,KAC9CtB,EAAKQ,MAAMe,YAAYH,GAOnBD,GACFA,gBApBSK,8BCsCVC,cAzDb,SAAAA,EAAYjB,GAAO,IAAAR,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAwB,IACjBzB,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7B,KAAMO,KACDK,MAAQ,CAACkB,OAAQ,GAAIC,QAAS,IAEnChC,EAAKiC,aAAejC,EAAKiC,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KACpBA,EAAKoC,UAAYpC,EAAKoC,UAAUF,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KACjBA,EAAKqC,YAAcrC,EAAKqC,YAAYH,KAAjBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KANFA,4EASNkB,GACXjB,KAAKqC,SAAS,CAACP,OAAQb,EAAEqB,OAAOC,0CAGxBtB,GAAG,IAAAuB,EAAAxC,KACXiB,EAAEwB,iBAEFC,IAAEC,KAAK,CACLC,IAAK,yCACLC,OAAQ,MACRC,SAAU,QACVxC,KAAM,CAACyC,EAAG/C,KAAKY,MAAMkB,QACrBkB,QAAS,SAAA1C,GACP,IAAIyB,EAAUzB,EAAKyB,QAAQkB,OAAQ,SAAAC,GAAK,OAAKA,EAAMC,eAAe,mBAAqBD,EAAME,cAAcC,SAAS,OACpHtB,EAAUA,EAAQuB,IAAK,SAAAJ,GAAK,MAAK,CAACK,GAAIL,EAAMM,IAAKC,KAAMP,EAAME,iBAC7DM,QAAQC,IAAI,UAAW5B,GACvBS,EAAKH,SAAS,CAACN,QAASA,2CAKlBd,GACVyC,QAAQC,IAAI,WAAY1C,EAAEqB,QAC1BtC,KAAKO,MAAMqD,QAAQ3C,EAAEqB,OAAOmB,uCAGrB,IAAAI,EAAA7D,KACH+B,EAAU/B,KAAKY,MAAMmB,QAAQuB,IAAI,SAAAJ,GACnC,OACEjD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBAAkBmD,IAAKN,EAAMK,IACzCtD,EAAAC,EAAAC,cAAA,YAAO+C,EAAMO,MACbxD,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASoC,KAAMP,EAAMO,KAAMpD,UAAU,kCAAkCW,QAAS6C,EAAKzB,aAAlG,UAKN,OACEnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASkB,MAAOvC,KAAKY,MAAMkB,OAAQzB,UAAU,eAAeyD,YAAY,iBAAiBC,SAAU/D,KAAKgC,eACpH/B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBW,QAAShB,KAAKmC,WAAvD,WAEFlC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBAAmB0B,WApDbR,qBCGtByC,SAAsB,CAC1B,CACEpE,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,MACRC,SAAU,MACVoE,KAAM,SAAA1D,GAAK,SAAA2D,OAAO3D,EAAMgC,MAAb,KAAA2B,OAAsB3D,EAAMgC,MAAQ,EAAI,QAAU,YAmDlD4B,sLA9CDV,GAAM,IAAA1D,EAAAC,KAChBoE,uBAAa,CACXC,MAAO,oBACPC,QAAS,0CACTC,QAAS,CACP,CACEC,MAAO,MACPxD,QAAS,WAAQjB,EAAKQ,MAAMkE,iBAAiBhB,KAE/C,CACEe,MAAO,0CAMN,IAAAhC,EAAAxC,KAEP,OADA0D,QAAQC,IAAI,QAAS3D,KAAKO,MAAMD,MAE9BL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,eACVC,KAAMN,KAAKO,MAAMD,KACjBE,QAASwD,EACTvD,gBAAiB,GACjBC,QAAS,EACTC,WAAY,SAACC,EAAOC,EAASC,EAAQC,GAAzB,MAAuC,CAC/CC,QAAS,SAACC,EAAGC,GACX,IAAIwD,EAAUlC,EAAKjC,MAAMD,KAAKO,EAAQO,OAAOqC,KAC7CjB,EAAKJ,YAAYsC,GAObxD,GACFA,gBArCWK,oBCkCZoD,cAjDb,SAAAA,EAAYpE,GAAO,IAAAR,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA2E,IACjB5E,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAkD,GAAA9C,KAAA7B,KAAMO,KACDK,MAAQ,CAACgE,cAAc,EAAOnB,KAAM,GAAIoB,IAAK,GAElD9E,EAAK+E,kBAAoB/E,EAAK+E,kBAAkB7C,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KACzBA,EAAKgF,IAAMhF,EAAKgF,IAAI9C,KAATR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KALMA,iFAQDkB,GAChBjB,KAAKqC,SAALZ,OAAAuD,EAAA,EAAAvD,CAAA,GAAgBR,EAAEqB,OAAOmB,KAAOxC,EAAEqB,OAAOC,oCAGvCtB,GACFA,EAAEwB,iBACF,IAAIwC,EAAIjF,KAAKY,MACbZ,KAAKO,MAAM2E,cAAclF,KAAKO,MAAM4E,aAAcF,EAAExB,KAAMwB,EAAEJ,KAC5D7E,KAAKqC,SAAS,CAACuC,cAAc,qCAGtB,IAAApC,EAAAxC,KAGP,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACZL,KAAKO,MAAM4E,aACVlF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAAShB,UAAU,kBAAkB+E,UAAQ,GAAEpF,KAAKO,MAAM4E,cACvElF,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAAShB,UAAU,kBAAkBW,QAPzC,WAAQwB,EAAKH,SAAS,CAACuC,cAAc,MAO9C,mBAEA,KAEH5E,KAAKY,MAAMgE,aACV3E,EAAAC,EAAAC,cAAA,QAAMkF,SAAUrF,KAAK+E,IAAK1E,UAAU,QAClCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOmF,QAAQ,QAAf,QACArF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,OAAOoC,KAAK,OAAOlB,MAAOvC,KAAKY,MAAM6C,KAAMM,SAAU/D,KAAK8E,kBAAmBzE,UAAU,eAAekD,GAAG,UAEvHtD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOmF,QAAQ,QAAf,OACArF,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASoC,KAAK,MAAMlB,MAAOvC,KAAKY,MAAMiE,IAAKd,SAAU/D,KAAK8E,kBAAmBzE,UAAU,eAAekD,GAAG,SAEvHtD,EAAAC,EAAAC,cAAA,SAAOkB,KAAK,SAASkB,MAAM,MAAMlC,UAAU,qBAE3C,aA5CgBkB,aCFfgE,EAAgB,CAC3B,CAAClE,KAAM,MAAOmE,KAAM,QAASC,IAAK,WAAYC,QAAS,QACvD,CAACrE,KAAM,MAAOmE,KAAM,OAAQC,IAAK,SAAUC,QAAS,QACpD,CAACrE,KAAM,OAAQmE,KAAM,eAAgBC,IAAK,SAAUC,QAAS,QAC7D,CAACrE,KAAM,OAAQmE,KAAM,QAASC,IAAK,YAAaC,QAAS,OACzD,CAACrE,KAAM,OAAQmE,KAAM,QAASC,IAAK,OAAQC,QAAS,SAGzCC,EAAkB,CAC7B,CAACtE,KAAM,MAAOoC,KAAM,MAAOoB,IAAK,GAChC,CAACxD,KAAM,MAAOoC,KAAM,QAASoB,IAAK,GAClC,CAACxD,KAAM,MAAOoC,KAAM,WAAYoB,IAAK,IACrC,CAACxD,KAAM,MAAOoC,KAAM,QAASoB,IAAK,GAClC,CAACxD,KAAM,MAAOoC,KAAM,OAAQoB,IAAK,GACjC,CAACxD,KAAM,OAAQoC,KAAM,QAASoB,IAAK,GACnC,CAACxD,KAAM,OAAQoC,KAAM,SAAUoB,IAAK,IACpC,CAACxD,KAAM,OAAQoC,KAAM,UAAWoB,IAAK,GACrC,CAACxD,KAAM,OAAQoC,KAAM,MAAOoB,IAAK,GACjC,CAACxD,KAAM,OAAQoC,KAAM,cAAeoB,IAAK,IACzC,CAACxD,KAAM,OAAQoC,KAAM,aAAcoB,IAAK,IACxC,CAACxD,KAAM,OAAQoC,KAAM,UAAWoB,IAAK,KC6CxBe,cAtDb,SAAAA,EAAYrF,GAAO,IAAAR,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAzB,KAAA4F,IACjB7F,EAAA0B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAmE,GAAA/D,KAAA7B,KAAMO,KACDK,MAAQ,CAACuE,aAAc,KAAMU,WAAYvF,EAAoBwF,aAAcxF,GAEhFP,EAAK6D,QAAU7D,EAAK6D,QAAQ3B,KAAbR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KACfA,EAAKmF,cAAgBnF,EAAKmF,cAAcjD,KAAnBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KACrBA,EAAK0E,iBAAmB1E,EAAK0E,iBAAiBxC,KAAtBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA1B,KANPA,uEASXsB,GACNrB,KAAKqC,SAAS,SAAAzB,GAAK,MAAK,CAAEiF,WAAWpE,OAAAsE,EAAA,EAAAtE,CAAKb,EAAMiF,YAAZ3B,OAAA,CAAwB,CAAC7C,KAAMA,8CAGvDA,EAAMoC,EAAMoB,GACxBnB,QAAQC,IAAI,OAAQtC,GACpBqC,QAAQC,IAAI,YAAa,CAAEmC,aAAarE,OAAAsE,EAAA,EAAAtE,CAAKzB,KAAKY,MAAMkF,cAAjB5B,OAAA,CAA+B,CAAC7C,KAAMA,EAAMoC,KAAMA,EAAMoB,IAAKA,OACpG7E,KAAKqC,SAAS,SAAAzB,GAAK,MAAK,CAAEkF,aAAarE,OAAAsE,EAAA,EAAAtE,CAAKb,EAAMkF,cAAZ5B,OAAA,CAA0B,CAAC7C,KAAMA,EAAMoC,KAAMA,EAAMoB,IAAKA,iDAG/EpB,GACfzD,KAAKqC,SAAS,SAAAzB,GAAK,MAAK,CAACkF,aAAclF,EAAMkF,aAAa7C,OAAO,SAAA+C,GAAC,OAAIA,EAAEvC,OAASA,wCAG1E,IAAAjB,EAAAxC,KAEHiG,EAAWjG,KAAKY,MAAMkF,aAAa7C,OAAO,SAAA+C,GAAC,OAAIA,EAAE3E,OAASmB,EAAK5B,MAAMuE,eACzEzB,QAAQC,IAAI,WAAYsC,GAExB,IAAIC,EAAiBlG,KAAKY,MAAMiF,WAAWvC,IAAI,SAAA0C,GAAC,OAAAvE,OAAA0E,EAAA,EAAA1E,CAAA,GAC3CuE,EAD2C,CAE9CI,OAAQ5D,EAAK5B,MAAMkF,aAAa7C,OAAO,SAAAoD,GAAC,OAAIA,EAAEhF,OAAS2E,EAAE3E,OAAMiF,WAIjE,OAFA5C,QAAQC,IAAI,iBAAkBuC,GAG5BjG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACoG,EAAD,CAAYjG,KAAM4F,EAAgB5E,YAdvB,SAAAD,GAAUmB,EAAKH,SAAS,CAAC8C,aAAc9D,OAelDpB,EAAAC,EAAAC,cAACqG,EAAD,CAAe5C,QAAS5D,KAAK4D,WAE/B3D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACsG,EAAD,CACEnG,KAAM2F,EACNxB,iBAAkBzE,KAAKyE,mBAEzBxE,EAAAC,EAAAC,cAACuG,EAAD,CAAevB,aAAcnF,KAAKY,MAAMuE,aAAcD,cAAelF,KAAKkF,0BA/CpE3D,aCEEoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d801b589.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nconst globalListColumns = [\n  {\n    Header: 'Type',\n    accessor: 'type'\n  },\n  {\n    Header: 'Diet',\n    accessor: 'diet'\n  },\n  {\n    Header: 'Feature',\n    accessor: 'feature'\n  },\n  {\n    Header: 'Amount',\n    accessor: 'amount'\n  }\n];\n\nclass GlobalList extends Component {\n  render() {\n    return (\n      <ReactTable\n        className=\"GlobalList\"\n        data={this.props.data} \n        columns={globalListColumns} \n        defaultPageSize={10} \n        minRows={5}\n        getTdProps={(state, rowInfo, column, instance) => ({\n            onClick: (e, handleOriginal) => {\n              let new_type = this.props.data[rowInfo.index].type;\n              this.props.onTypeClick(new_type);\n\n              // IMPORTANT! React-Table uses onClick internally to trigger\n              // events like expanding SubComponents and pivots.\n              // By default a custom 'onClick' handler will override this functionality.\n              // If you want to fire the original onClick handler, call the\n              // 'handleOriginal' function.\n              if (handleOriginal) {\n                handleOriginal();\n              }\n            }\n          })\n        }\n      />\n    );\n  }\n}\n\nexport default GlobalList;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\n\nclass SearchSpecies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {search: '', results: []};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getResult = this.getResult.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({search: e.target.value});\n  }\n\n  getResult(e) {\n    e.preventDefault();\n\n    $.ajax({\n      url: 'https://api.gbif.org/v1/species/search',\n      method: 'GET',\n      dataType: 'JSONP',\n      data: {q: this.state.search},\n      success: data => {\n        let results = data.results.filter( specy => (specy.hasOwnProperty('canonicalName') && !specy.canonicalName.includes('.')) );\n        results = results.map( specy => ({id: specy.key, name: specy.canonicalName}) );\n        console.log(\"results\", results);\n        this.setState({results: results});\n      }\n    });\n  }\n\n  handleClick(e) {\n    console.log(\"e.target\", e.target);\n    this.props.addType(e.target.name);\n  }\n\n  render() {\n    let results = this.state.results.map(specy => {\n      return (\n        <li className=\"list-group-item\" key={specy.id}>\n          <span>{specy.name}</span>\n          <button type=\"button\" name={specy.name} className=\"btn btn-info btn-sm float-right\" onClick={this.handleClick}>add</button> \n        </li>\n      );\n    });\n\n    return (\n      <div className=\"ml-3\">\n        <form className=\"form-inline mt-3\">\n          <input type=\"search\" value={this.state.search} className=\"form-control\" placeholder=\"Search species\" onChange={this.handleChange} />\n          <button className=\"btn btn-primary ml-3\" onClick={this.getResult}>search</button>\n        </form>\n        <ul className=\"list-group mt-3\">{results}</ul>\n      </div>\n    );\n  }\n}\n\nexport default SearchSpecies;\n","import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nconst specificListColumns = [\n  {\n    Header: 'Name',\n    accessor: 'name'\n  },\n  {\n    Header: 'Age',\n    accessor: 'age',\n    Cell: props => `${props.value} ${props.value > 1 ? 'years' : 'year'}`\n  }\n];\n\nclass SpecificList extends Component {\n  handleClick(name) {\n    confirmAlert({\n      title: 'Confirm to remove',\n      message: 'Are you sure to remove this individual?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => { this.props.removeIndividual(name); }\n        },\n        {\n          label: 'No',\n        }\n      ]\n    })\n  }\n\n  render() {\n    console.log('state', this.props.data);\n    return (\n      <ReactTable\n        className=\"SpecificList\"\n        data={this.props.data} \n        columns={specificListColumns} \n        defaultPageSize={10} \n        minRows={5}\n        getTdProps={(state, rowInfo, column, instance) => ({\n            onClick: (e, handleOriginal) => {\n              let clicked = this.props.data[rowInfo.index].name;\n              this.handleClick(clicked);\n\n              // IMPORTANT! React-Table uses onClick internally to trigger\n              // events like expanding SubComponents and pivots.\n              // By default a custom 'onClick' handler will override this functionality.\n              // If you want to fire the original onClick handler, call the\n              // 'handleOriginal' function.\n              if (handleOriginal) {\n                handleOriginal();\n              }\n            }\n          })\n        }\n      />\n    );\n  }\n}\n\nexport default SpecificList;\n","import React, { Component } from 'react';\n\nclass AddIndividual extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {addingShowed: false, name: '', age: 1};\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.add = this.add.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  add(e) {\n    e.preventDefault();\n    let s = this.state;\n    this.props.addIndividual(this.props.selectedType, s.name, s.age);\n    this.setState({addingShowed: false});\n  }\n\n  render() {\n    let showAdding = () => { this.setState({addingShowed: true}); }\n\n    return (\n      <div className=\"ml-3\">\n        {this.props.selectedType ? (\n          <div className=\"mt-3 btn-group\">\n            <button type=\"button\" className=\"btn btn-primary\" disabled>{this.props.selectedType}</button>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={showAdding}>Add individual</button>\n          </div>\n        ) : null }\n\n        {this.state.addingShowed ? (\n          <form onSubmit={this.add} className=\"mt-3\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} className=\"form-control\" id=\"name\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Age</label>\n              <input type=\"number\" name=\"age\" value={this.state.age} onChange={this.handleInputChange} className=\"form-control\" id=\"age\" />\n            </div>\n            <input type=\"submit\" value=\"add\" className=\"btn btn-primary\" />\n          </form>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default AddIndividual;\n","export const iniGlobalList = [\n  {type: 'dog', diet: 'bones', cry: 'Waf waf!', feature: 'bite'},\n  {type: 'cat', diet: 'fish', cry: 'Miaou!', feature: 'purr'},\n  {type: 'fish', diet: 'other fishes', cry: 'Bloop!', feature: 'swim'},\n  {type: 'fowl', diet: 'seeds', cry: 'Cocorico!', feature: 'fly'},\n  {type: 'geek', diet: 'pizza', cry: 'Lol!', feature: 'hack'},\n];\n\nexport const iniSpecificList = [\n  {type: 'dog', name: 'Rex', age: 5},\n  {type: 'dog', name: 'Turbo', age: 1},\n  {type: 'cat', name: 'Nyan Cat', age: 20},\n  {type: 'cat', name: 'Booby', age: 3},\n  {type: 'cat', name: 'Nini', age: 4},\n  {type: 'fish', name: 'Mouka', age: 2},\n  {type: 'fish', name: 'Purple', age: 0.4},\n  {type: 'fowl', name: 'Flitter', age: 7},\n  {type: 'fowl', name: 'Zua', age: 4},\n  {type: 'geek', name: 'Jean Dupont', age: 48},\n  {type: 'geek', name: 'John Smith', age: 34},\n  {type: 'geek', name: 'Foo Bar', age: 65},\n];\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport GlobalList from './GlobalList.js';\nimport SearchSpecies from './SearchSpecies.js';\nimport SpecificList from './SpecificList.js';\nimport AddIndividual from './AddIndividual.js';\nimport * as data from './data.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedType: null, globalList: data.iniGlobalList, specificList: data.iniSpecificList};\n\n    this.addType = this.addType.bind(this);\n    this.addIndividual = this.addIndividual.bind(this);\n    this.removeIndividual = this.removeIndividual.bind(this);\n  }\n\n  addType(type) {\n    this.setState(state => ({ globalList: [...state.globalList, {type: type}] }))\n  }\n\n  addIndividual(type, name, age) {\n    console.log(\"type\", type);\n    console.log('new state', { specificList: [...this.state.specificList, {type: type, name: name, age: age}] })\n    this.setState(state => ({ specificList: [...state.specificList, {type: type, name: name, age: age}] }));\n  }\n\n  removeIndividual(name) {\n    this.setState(state => ({specificList: state.specificList.filter(x => x.name !== name)}));\n  }\n\n  render() {\n    const changeType = type => { this.setState({selectedType: type}); };\n    let new_data = this.state.specificList.filter(x => x.type === this.state.selectedType);\n    console.log(\"new_data\", new_data);\n\n    let globalListData = this.state.globalList.map(x => ({\n      ...x,\n      amount: this.state.specificList.filter(y => y.type === x.type).length\n    }));\n    console.log(\"globalListData\", globalListData);\n\n    return (\n      <div className=\"App container-fluid\">\n        <div className=\"row mt-3\">\n          <div className=\"col-lg-6\">\n            <GlobalList data={globalListData} onTypeClick={changeType} />\n            <SearchSpecies addType={this.addType} />\n          </div>\n          <div className=\"col-lg-6\">\n            <SpecificList \n              data={new_data}\n              removeIndividual={this.removeIndividual}\n            />\n            <AddIndividual selectedType={this.state.selectedType} addIndividual={this.addIndividual} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}